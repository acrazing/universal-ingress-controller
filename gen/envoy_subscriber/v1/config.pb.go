// @since 2022-04-09 19:52:51
// @author acrazing <joking.young@gmail.com>

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: universal_ingress_controller/envoy_subscriber/v1/config.proto

package envoyv1

import (
	v1 "github.com/acrazing/universal-ingress-controller/gen/core/v1"
	v3 "github.com/envoyproxy/go-control-plane/envoy/service/discovery/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EnvoyConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetListeners []string                     `protobuf:"bytes,1,rep,name=target_listeners,json=targetListeners,proto3" json:"target_listeners,omitempty"`
	Clusters        *EnvoyConfig_DiscoverySource `protobuf:"bytes,2,opt,name=clusters,proto3" json:"clusters,omitempty"`
	Listeners       *EnvoyConfig_DiscoverySource `protobuf:"bytes,3,opt,name=listeners,proto3" json:"listeners,omitempty"`
	Runtimes        *EnvoyConfig_DiscoverySource `protobuf:"bytes,4,opt,name=runtimes,proto3" json:"runtimes,omitempty"`
	Routes          *EnvoyConfig_DiscoverySource `protobuf:"bytes,5,opt,name=routes,proto3" json:"routes,omitempty"`
	ScopedRoutes    *EnvoyConfig_DiscoverySource `protobuf:"bytes,6,opt,name=scoped_routes,json=scopedRoutes,proto3" json:"scoped_routes,omitempty"`
	Hosts           *EnvoyConfig_DiscoverySource `protobuf:"bytes,7,opt,name=hosts,proto3" json:"hosts,omitempty"`
	Endpoints       *EnvoyConfig_DiscoverySource `protobuf:"bytes,8,opt,name=endpoints,proto3" json:"endpoints,omitempty"`
	Secrets         *EnvoyConfig_DiscoverySource `protobuf:"bytes,9,opt,name=secrets,proto3" json:"secrets,omitempty"`
}

func (x *EnvoyConfig) Reset() {
	*x = EnvoyConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_universal_ingress_controller_envoy_subscriber_v1_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvoyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvoyConfig) ProtoMessage() {}

func (x *EnvoyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_universal_ingress_controller_envoy_subscriber_v1_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvoyConfig.ProtoReflect.Descriptor instead.
func (*EnvoyConfig) Descriptor() ([]byte, []int) {
	return file_universal_ingress_controller_envoy_subscriber_v1_config_proto_rawDescGZIP(), []int{0}
}

func (x *EnvoyConfig) GetTargetListeners() []string {
	if x != nil {
		return x.TargetListeners
	}
	return nil
}

func (x *EnvoyConfig) GetClusters() *EnvoyConfig_DiscoverySource {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *EnvoyConfig) GetListeners() *EnvoyConfig_DiscoverySource {
	if x != nil {
		return x.Listeners
	}
	return nil
}

func (x *EnvoyConfig) GetRuntimes() *EnvoyConfig_DiscoverySource {
	if x != nil {
		return x.Runtimes
	}
	return nil
}

func (x *EnvoyConfig) GetRoutes() *EnvoyConfig_DiscoverySource {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *EnvoyConfig) GetScopedRoutes() *EnvoyConfig_DiscoverySource {
	if x != nil {
		return x.ScopedRoutes
	}
	return nil
}

func (x *EnvoyConfig) GetHosts() *EnvoyConfig_DiscoverySource {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *EnvoyConfig) GetEndpoints() *EnvoyConfig_DiscoverySource {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *EnvoyConfig) GetSecrets() *EnvoyConfig_DiscoverySource {
	if x != nil {
		return x.Secrets
	}
	return nil
}

type EnvoyConfig_DiscoverySource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Source:
	//	*EnvoyConfig_DiscoverySource_Inline
	//	*EnvoyConfig_DiscoverySource_Kube
	Source isEnvoyConfig_DiscoverySource_Source `protobuf_oneof:"source"`
}

func (x *EnvoyConfig_DiscoverySource) Reset() {
	*x = EnvoyConfig_DiscoverySource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_universal_ingress_controller_envoy_subscriber_v1_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvoyConfig_DiscoverySource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvoyConfig_DiscoverySource) ProtoMessage() {}

func (x *EnvoyConfig_DiscoverySource) ProtoReflect() protoreflect.Message {
	mi := &file_universal_ingress_controller_envoy_subscriber_v1_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvoyConfig_DiscoverySource.ProtoReflect.Descriptor instead.
func (*EnvoyConfig_DiscoverySource) Descriptor() ([]byte, []int) {
	return file_universal_ingress_controller_envoy_subscriber_v1_config_proto_rawDescGZIP(), []int{0, 0}
}

func (m *EnvoyConfig_DiscoverySource) GetSource() isEnvoyConfig_DiscoverySource_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *EnvoyConfig_DiscoverySource) GetInline() *v3.DiscoveryResponse {
	if x, ok := x.GetSource().(*EnvoyConfig_DiscoverySource_Inline); ok {
		return x.Inline
	}
	return nil
}

func (x *EnvoyConfig_DiscoverySource) GetKube() *v1.KubeResource {
	if x, ok := x.GetSource().(*EnvoyConfig_DiscoverySource_Kube); ok {
		return x.Kube
	}
	return nil
}

type isEnvoyConfig_DiscoverySource_Source interface {
	isEnvoyConfig_DiscoverySource_Source()
}

type EnvoyConfig_DiscoverySource_Inline struct {
	// cannot use envoy.v1 package due to this
	Inline *v3.DiscoveryResponse `protobuf:"bytes,1,opt,name=inline,proto3,oneof"`
}

type EnvoyConfig_DiscoverySource_Kube struct {
	Kube *v1.KubeResource `protobuf:"bytes,2,opt,name=kube,proto3,oneof"`
}

func (*EnvoyConfig_DiscoverySource_Inline) isEnvoyConfig_DiscoverySource_Source() {}

func (*EnvoyConfig_DiscoverySource_Kube) isEnvoyConfig_DiscoverySource_Source() {}

var File_universal_ingress_controller_envoy_subscriber_v1_config_proto protoreflect.FileDescriptor

var file_universal_ingress_controller_envoy_subscriber_v1_config_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x65,
	0x6e, 0x76, 0x6f, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x30, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x65, 0x6e,
	0x76, 0x6f, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x65, 0x6e, 0x76, 0x6f,
	0x79, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x2f, 0x76, 0x33, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x6c, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd2, 0x08, 0x0a, 0x0b, 0x45, 0x6e,
	0x76, 0x6f, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x39, 0x0a, 0x10, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x92, 0x01, 0x08, 0x18, 0x01, 0x22, 0x04, 0x72,
	0x02, 0x5a, 0x00, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x73, 0x12, 0x69, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x6b, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x5f, 0x69,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x69, 0x0a, 0x08,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d,
	0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x65, 0x6e,
	0x76, 0x6f, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x65, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x5f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x6f, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x72,
	0x0a, 0x0d, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x6c, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x64, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x63, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x4d, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x5f, 0x69, 0x6e,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x6b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x75, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x5f,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e,
	0x76, 0x6f, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x67, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x6c, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x1a, 0xae, 0x01,
	0x0a, 0x0f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x47, 0x0a, 0x06, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x33, 0x2e, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x06, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x6b, 0x75,
	0x62, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4b, 0x75, 0x62, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x04,
	0x6b, 0x75, 0x62, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x52,
	0x5a, 0x50, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x63, 0x72,
	0x61, 0x7a, 0x69, 0x6e, 0x67, 0x2f, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2d,
	0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x5f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x6e, 0x76, 0x6f, 0x79,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_universal_ingress_controller_envoy_subscriber_v1_config_proto_rawDescOnce sync.Once
	file_universal_ingress_controller_envoy_subscriber_v1_config_proto_rawDescData = file_universal_ingress_controller_envoy_subscriber_v1_config_proto_rawDesc
)

func file_universal_ingress_controller_envoy_subscriber_v1_config_proto_rawDescGZIP() []byte {
	file_universal_ingress_controller_envoy_subscriber_v1_config_proto_rawDescOnce.Do(func() {
		file_universal_ingress_controller_envoy_subscriber_v1_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_universal_ingress_controller_envoy_subscriber_v1_config_proto_rawDescData)
	})
	return file_universal_ingress_controller_envoy_subscriber_v1_config_proto_rawDescData
}

var file_universal_ingress_controller_envoy_subscriber_v1_config_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_universal_ingress_controller_envoy_subscriber_v1_config_proto_goTypes = []interface{}{
	(*EnvoyConfig)(nil),                 // 0: universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig
	(*EnvoyConfig_DiscoverySource)(nil), // 1: universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.DiscoverySource
	(*v3.DiscoveryResponse)(nil),        // 2: envoy.service.discovery.v3.DiscoveryResponse
	(*v1.KubeResource)(nil),             // 3: universal_ingress_controller.core.v1.KubeResource
}
var file_universal_ingress_controller_envoy_subscriber_v1_config_proto_depIdxs = []int32{
	1,  // 0: universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.clusters:type_name -> universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.DiscoverySource
	1,  // 1: universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.listeners:type_name -> universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.DiscoverySource
	1,  // 2: universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.runtimes:type_name -> universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.DiscoverySource
	1,  // 3: universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.routes:type_name -> universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.DiscoverySource
	1,  // 4: universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.scoped_routes:type_name -> universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.DiscoverySource
	1,  // 5: universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.hosts:type_name -> universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.DiscoverySource
	1,  // 6: universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.endpoints:type_name -> universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.DiscoverySource
	1,  // 7: universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.secrets:type_name -> universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.DiscoverySource
	2,  // 8: universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.DiscoverySource.inline:type_name -> envoy.service.discovery.v3.DiscoveryResponse
	3,  // 9: universal_ingress_controller.envoy_subscriber.v1.EnvoyConfig.DiscoverySource.kube:type_name -> universal_ingress_controller.core.v1.KubeResource
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_universal_ingress_controller_envoy_subscriber_v1_config_proto_init() }
func file_universal_ingress_controller_envoy_subscriber_v1_config_proto_init() {
	if File_universal_ingress_controller_envoy_subscriber_v1_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_universal_ingress_controller_envoy_subscriber_v1_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvoyConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_universal_ingress_controller_envoy_subscriber_v1_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvoyConfig_DiscoverySource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_universal_ingress_controller_envoy_subscriber_v1_config_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*EnvoyConfig_DiscoverySource_Inline)(nil),
		(*EnvoyConfig_DiscoverySource_Kube)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_universal_ingress_controller_envoy_subscriber_v1_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_universal_ingress_controller_envoy_subscriber_v1_config_proto_goTypes,
		DependencyIndexes: file_universal_ingress_controller_envoy_subscriber_v1_config_proto_depIdxs,
		MessageInfos:      file_universal_ingress_controller_envoy_subscriber_v1_config_proto_msgTypes,
	}.Build()
	File_universal_ingress_controller_envoy_subscriber_v1_config_proto = out.File
	file_universal_ingress_controller_envoy_subscriber_v1_config_proto_rawDesc = nil
	file_universal_ingress_controller_envoy_subscriber_v1_config_proto_goTypes = nil
	file_universal_ingress_controller_envoy_subscriber_v1_config_proto_depIdxs = nil
}
